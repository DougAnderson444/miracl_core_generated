#!/usr/bin/env python

# Script to generate 64 bit rust code

import os, glob
import shutil

def copy_and_overwrite(from_path, to_path):
    if os.path.exists(to_path):
        shutil.rmtree(to_path)
    # shutil.copytree(from_path, to_path, ignore=shutil.ignore_patterns('lib.rs'))
    shutil.copytree(from_path, to_path)

# Update submodule from github
os.system('git submodule foreach git pull')

# Path where the rust code will be generated by miracl's `config64.py` script
rust_path = os.path.join('miracl_core', 'rust')
os.chdir(rust_path)

# The curve no's to use
#curve_file_path = os.path.join('..', '..', 'curve_nos.txt')
os.system('python config64.py < ../../curve_nos.txt')

# path of the src directory of the rust code
src_path = os.path.join('core', 'src');

# path where the src directory needs to be moved
dest_path = os.path.join('..', '..', 'rust_64', 'src')

# Path where the lib.rs will be moved as it does not need to be modified
backup_path = os.path.join('..', '..')

# Move lib.rs to so its not overwritten
shutil.move(os.path.join(dest_path, 'lib.rs'), os.path.join(backup_path, 'lib_backup.rs'))
# Move the generated source to the crate (`rust_64`)
copy_and_overwrite(src_path, dest_path)
# Move lib.rs back
shutil.move(os.path.join(backup_path, 'lib_backup.rs'), os.path.join(dest_path, 'lib.rs'))

# Reset the changes done to submodule
os.system('git reset --hard')
shutil.rmtree('core', ignore_errors = True)
